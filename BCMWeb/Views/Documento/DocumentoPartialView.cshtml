@using BCMWeb.Models

@model DocumentosModel

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "gvDocumentos";
    settings.KeyFieldName = "IdDocumento";
    settings.CallbackRouteValues = new { Controller = "Documento", Action = "GridViewDocumentosPartialView" };

    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
    settings.ControlStyle.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(0);
    settings.ControlStyle.Border.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(0);
    settings.ControlStyle.BorderBottom.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(1);
    settings.ClientSideEvents.SelectionChanged = "function (s, e) { lp.Show(); }";
    settings.ClientSideEvents.BeginCallback = "function (s, e) { lp.Show(); }";
    settings.ClientSideEvents.EndCallback = "function (s, e) { lp.Hide(); }";

    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;

    settings.SettingsPager.PageSize = 20;
    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50", "100" };



    settings.Columns.Add(column =>
    {
        column.Caption = string.Empty;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        column.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        column.SetDataItemTemplateContent(c =>
        {
            if ((bool)DataBinder.Eval(c.DataItem, "Editable") && (bool)DataBinder.Eval(c.DataItem, "Eliminable"))
            {
                ViewContext.Writer.Write(
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonVer, "VerDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdClaseDocumento = Model.IdClaseDocumento, IdModulo = Model.IdModulo }) + "&nbsp;" +
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonEdit, "EditarDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdClaseDocumento = Model.IdClaseDocumento, IdModulo = Model.IdModulo }) + "&nbsp;" +
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonDelete, "EliminarDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdModulo = Model.IdModulo },
                        new { onclick = "return confirm('" + string.Format(Resources.BCMWebPublic.ConfirmDeleteMessage, DataBinder.Eval(c.DataItem, "NroDocumento")) + "')" })
                );
            }
            else if ((bool)DataBinder.Eval(c.DataItem, "Editable"))
            {
                ViewContext.Writer.Write(
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonVer, "VerDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdClaseDocumento = Model.IdClaseDocumento, IdModulo = Model.IdModulo }) + "&nbsp;" +
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonEdit, "EditarDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdClaseDocumento = Model.IdClaseDocumento, IdModulo = Model.IdModulo })
                );
            }
            else if ((bool)DataBinder.Eval(c.DataItem, "Eliminable"))
            {
                ViewContext.Writer.Write(
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonVer, "VerDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdClaseDocumento = Model.IdClaseDocumento, IdModulo = Model.IdModulo }) + "&nbsp;" +
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonDelete, "EliminarDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdModulo = Model.IdModulo },
                        new { onclick = "return confirm('" + string.Format(Resources.BCMWebPublic.ConfirmDeleteMessage, DataBinder.Eval(c.DataItem, "NroDocumento")) + "')" })
                );
            }
            else
            {
                ViewContext.Writer.Write(
                    Html.ActionLink(Resources.BCMWebPublic.captionButtonVer, "VerDocumento", new { IdDocumento = DataBinder.Eval(c.DataItem, "IdDocumento"), IdClaseDocumento = Model.IdClaseDocumento, IdModulo = Model.IdModulo })
                );
            }
        });
        column.SetHeaderTemplateContent(c =>
        {
            //if ((bool)DataBinder.Eval(c.DataItem, "Editable"))
            //{
            ViewContext.Writer.Write(
                Html.ActionLink(Resources.BCMWebPublic.captionButtonNew, "EditarDocumento", new { IdDocumento = 0, IdClaseDocumento = Model.IdClaseDocumento, IdModulo = Model.IdModulo }, new { onclick = "lp.Show();" }).ToHtmlString()
            );
            //}
        });
        column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        column.Settings.AllowDragDrop = DefaultBoolean.False;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.Width = Unit.Percentage(10);
    });

    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "NroDocumento";
        c.Width = Unit.Percentage(10);
        c.Caption = Resources.DocumentoResource.captionNroDocumento;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.PropertiesEdit.DisplayFormatString = "#,##0";
        c.HeaderStyle.Wrap = DefaultBoolean.True;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "FechaCreacion";
        c.Width = Unit.Percentage(10);
        c.Caption = Resources.DocumentoResource.captionFechaCreacion;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.PropertiesEdit.DisplayFormatString = "d";
        c.HeaderStyle.Wrap = DefaultBoolean.True;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "Estatus";
        c.Width = Unit.Percentage(10);
        c.Caption = Resources.DocumentoResource.captionEstatus;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "FechaEstadoDocumento";
        c.Width = Unit.Percentage(15);
        c.Caption = Resources.DocumentoResource.captionFechaEstatus;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.PropertiesEdit.DisplayFormatString = "d";
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "FechaUltimaModificacion";
        c.Width = Unit.Percentage(15);
        c.Caption = Resources.DocumentoResource.captionFechaUltimaModificacion;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.PropertiesEdit.DisplayFormatString = "d";
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "NroVersion";
        c.Width = Unit.Percentage(5);
        c.Caption = Resources.DocumentoResource.captionVersion;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.PropertiesEdit.DisplayFormatString = "#,##0";
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.False;
        c.Width = Unit.Percentage(10);
        c.Caption = string.Empty;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
        c.SetDataItemTemplateContent(tc =>
        {
            @Html.DevExpress().Image(i =>
            {
                i.ImageUrl = "~/Content/Images/Internal/icono-pdf.jpg";
                i.Width = Unit.Pixel(50);
            });
        });
        c.Visible = System.IO.File.Exists("~/Content/Images/Internal/icono-pdf.jpg");
    });

}).Bind(Model.Documentos).GetHtml()
