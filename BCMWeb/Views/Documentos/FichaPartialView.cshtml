@using BCMWeb.Models

@model DocumentoModel

<style type="text/css">
    .formLayout {
        max-width: 1300px;
        margin: auto;
    }
</style>

<script type="text/javascript">
    function onButtonClick(s, e) {
        if (e.buttonIndex == 0) {
            modalPersona.PerformCallback();
            modalPersona.Show();
        }
    }
</script>

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@using (Html.BeginForm("Ficha", "Documentos", FormMethod.Post, htmlAttributes: new { id = "frmLayout" }))
{

    @Html.Hidden("Certificar")
    @Html.DevExpress().FormLayout(s =>
{
    s.Name = "fichaLayout";
    s.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    s.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 800;
    s.ControlStyle.CssClass = "fromLayout";

    s.Items.AddGroupItem(gi =>
    {
        gi.Caption = Resources.FichaResource.captionGrupo1;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Items.Add(m => m.IdPersonaResponsable, i =>
        {
            i.NestedExtension().ComboBox(set =>
            {
                set.Width = Unit.Percentage(100);
                set.ShowModelErrors = true;

                //set.Properties.ClientSideEvents.ValueChanged = "UpdatePersona";
                set.Properties.ValueType = typeof(long);
                set.Properties.DataSource = BCMWeb.Metodos.GetPersonasConUsuario();
                set.Properties.TextField = "Nombre";
                set.Properties.ValueField = "IdPersona";
                set.Properties.ValidationSettings.Display = Display.Dynamic;
                set.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                set.Properties.ClientSideEvents.ButtonClick = "onButtonClick";
                set.PreRender = (sender, e) =>
                {
                    ASPxComboBox cmb = (ASPxComboBox)sender;
                    cmb.DropDownButton.Visible = true;
                    cmb.Buttons.Add(new EditButton(Resources.BCMWebPublic.captionButtonNew));
                };
            });
        });
        gi.Items.Add(m => m.Responsable.Cargo, i =>
        {
            i.NestedExtension().TextBox(set =>
            {
                set.Width = Unit.Percentage(100);
                set.Enabled = false;
            });
        });
        gi.Items.Add(m => m.Responsable.UnidadOrganizativa, i =>
        {
            i.NestedExtension().TextBox(set =>
            {
                set.Width = Unit.Percentage(100);
                set.Enabled = false;
            });
        });
    });
    s.Items.AddGroupItem(gi =>
    {
        gi.Caption = Resources.FichaResource.captionGrupo2;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Items.Add(m => m.Entrevistas, i =>
        {
            i.Caption = string.Empty;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("EntrevistasPartialView", Model);
            });
        });
    });
    s.Items.AddGroupItem(gi =>
    {
        gi.Caption = Resources.FichaResource.captionGrupo3;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Items.Add(m => m.Aprobaciones, i =>
        {
            i.Caption = string.Empty;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("AprobacionesPartialView", Model);
            });
        });
    });
    s.Items.Add(m => m.RequiereCertificacion, i =>
    {
        i.Caption = Resources.FichaResource.captionRequiereCertificacion;
        i.NestedExtension().CheckBox(set =>
        {
            set.Name = "cbxRequiereCertificacion";
            set.Properties.ClientSideEvents.CheckedChanged = "function (s,e) {  if (s.GetChecked() == true) { fichaLayout.GetItemByName(\"gbCertificacion\").SetVisible(true); } else { fichaLayout.GetItemByName(\"gbCertificacion\").SetVisible(false);  } }";
        });
    });
    s.Items.AddGroupItem(gi =>
    {
        gi.Name = "gbCertificacion";
        gi.Caption = Resources.FichaResource.captionGrupo4;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Visible = Model.RequiereCertificacion;
        gi.Items.Add(m => m.Certificaciones, i =>
        {
            i.Caption = string.Empty;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("CertificacionesPartialView", Model);
            });
        });
    });
    s.Items.AddGroupItem(gi =>
    {
        gi.Name = "gbPersonasClaves";
        gi.Caption = Resources.FichaResource.captionGrupo5;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Visible = (Session["IdTipoDocumento"].ToString() != "4" && Session["IdTipoDocumento"].ToString() != "7");
        gi.Items.Add(m => m.PersonasClave, i =>
        {
            i.Caption = string.Empty;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("PersonasClavePartialView", Model);
            });
        });
    });
    s.Items.AddGroupItem(gi =>
    {
        gi.Name = "gbProcesos";
        gi.Caption = Resources.FichaResource.captionGrupo6;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Visible = (Session["IdTipoDocumento"].ToString() == "4");
        gi.Items.Add(m => m.Procesos, i =>
        {
            i.Caption = string.Empty;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("ProcesosPartialView", Model);
            });
        });
    });
    s.Items.Add(i =>
    {
        i.ShowCaption = DefaultBoolean.False;
        i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        i.NestedExtension().Button(bt =>
        {
            bt.Name = "botSaveFicha";
            bt.Text = Resources.BCMWebPublic.captionButtonSave;
            bt.UseSubmitBehavior = true;
        });
    });

}).GetHtml();
}


@Html.DevExpress().PopupControl(s =>
{
    s.Name = "modalPersona";
    s.CallbackRouteValues = new { Controller = "Documentos", Action = "PersonaPartialView" };
    s.Width = 700;
    s.Height = 550;
    s.AllowDragging = true;
    s.CloseAction = CloseAction.CloseButton;
    s.CloseOnEscape = true;
    s.PopupAnimationType = AnimationType.Slide;
    s.HeaderText = Resources.FichaResource.headerPopup;
    s.Modal = true;
    s.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    s.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    s.ScrollBars = ScrollBars.Vertical;
    s.SetContent(() =>
    {
        Html.RenderPartial("PersonaPartialView", new PersonaModel());
    });
}).GetHtml();

