@using BCMWeb.Models

@model PersonaModel

<script type="text/javascript">
    function botUO_Click() {
        modalUO.Show();
    }
    function botCargo_Click() {
        modalCargo.Show();
    }
    function OnBeginGridCallback()
    {
        lp.Show();
    }
    function OnEndGridCallback() {
        lp.Hide();
    }
    function CreateCargo()
    {
        var texto = NombreCargo.GetText();
        $.ajax({
            type: 'POST',
            url: '/Documentos/NuevoCargo',
            dataType: 'json',
            data: {
                Texto: texto
            },
            success: function (data) {
                IdCargoPersona.AddItem(texto, data.IdCargo);
                IdCargoPersona.SetValue(data.IdCargo);
                modalCargo.Hide();
            },
            error: function () {
                alert("error");
            }
        });
    }
    function CreateUnidad() {
        var texto = NombreUnidadOrganizativa.GetText();
        var UnidadPadreId = IdUnidadPadre.GetValue();

        $.ajax({
            type: 'POST',
            url: '/Documentos/NuevaUnidad',
            dataType: 'json',
            data: {
                Texto: texto,
                idUnidadPadre: UnidadPadreId
            },
            success: function (data) {
                IdUnidadOrganizativaPersona.AddItem(texto, data.IdUnidad);
                IdUnidadOrganizativaPersona.SetValue(data.IdUnidad);
                modalUO.Hide();
            },
            error: function () {
                alert("error");
            }
        });
    }
</script>

@using (Html.BeginForm("PersonaPartialView", "Documentos", FormMethod.Post, htmlAttributes: new { id = "frmPersona" }))
{
    @Html.DevExpress().FormLayout(s =>
{
    s.Name = "personaLayout";
    s.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    s.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 800;
    s.ControlStyle.CssClass = "fromLayout";

    s.Items.AddGroupItem(gi =>
    {
        gi.Caption = Resources.FichaResource.personaGrupoDatos;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Items.Add(m => m.Nombre, i =>
        {
            i.NestedExtension().TextBox(tb =>
            {
                tb.Width = Unit.Percentage(100);
                tb.ShowModelErrors = true;
                tb.Properties.ValidationSettings.Display = Display.Dynamic;
                tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            });
        });
        gi.Items.Add(m => m.Identificacion, i =>
        {
            i.NestedExtension().TextBox(tb =>
            {
                tb.Width = Unit.Percentage(100);
                tb.ShowModelErrors = true;
                tb.Properties.ValidationSettings.Display = Display.Dynamic;
                tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            });
        });
        gi.Items.Add(m => m.IdUnidadOrganizativaPersona, i =>
        {
            i.NestedExtension().ComboBox(cb =>
            {
                cb.Width = Unit.Percentage(100);
                cb.ShowModelErrors = true;

                //set.Properties.ClientSideEvents.ValueChanged = "UpdatePersona";
                cb.Properties.ValueType = typeof(long);
                cb.Properties.DataSource = BCMWeb.Metodos.GetUnidades();
                cb.Properties.TextField = "NombreUnidadOrganizativa";
                cb.Properties.ValueField = "IdUnidad";
                cb.Properties.ValidationSettings.Display = Display.Dynamic;
                cb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                cb.Properties.ClientSideEvents.ButtonClick = "botUO_Click";
                cb.PreRender = (sender, e) =>
                {
                    ASPxComboBox cmb = (ASPxComboBox)sender;
                    cmb.DropDownButton.Visible = true;
                    cmb.Buttons.Add(new EditButton(Resources.BCMWebPublic.captionButtonNew));
                };

            });
        });
        gi.Items.Add(m => m.IdCargoPersona, i =>
        {
            i.NestedExtension().ComboBox(cb =>
            {
                cb.Width = Unit.Percentage(100);
                cb.ShowModelErrors = true;

                cb.Properties.ValueType = typeof(long);
                cb.Properties.DataSource = BCMWeb.Metodos.GetCargos();
                cb.Properties.TextField = "NombreCargo";
                cb.Properties.ValueField = "IdCargo";
                cb.Properties.ValidationSettings.Display = Display.Dynamic;
                cb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                cb.Properties.ClientSideEvents.ButtonClick = "botCargo_Click";
                cb.PreRender = (sender, e) =>
                {
                    ASPxComboBox cmb = (ASPxComboBox)sender;
                    cmb.DropDownButton.Visible = true;
                    cmb.Buttons.Add(new EditButton(Resources.BCMWebPublic.captionButtonNew));
                };

            });
        });
    });
    s.Items.AddGroupItem(gi =>
    {
        gi.Caption = Resources.FichaResource.personaGrupoCorreos;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Items.Add(m => m.CorreosElectronicos, i =>
        {
            i.Caption = string.Empty;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("CorreosPartialView", Model.CorreosElectronicos);
            });
        });
    });
    s.Items.AddGroupItem(gi =>
    {
        gi.Caption = Resources.FichaResource.personaGrupoTelefono;
        gi.SettingsItemHelpTexts.Position = HelpTextPosition.Bottom;
        gi.ColCount = 1;
        gi.Items.Add(m => m.Telefonos, i =>
        {
            i.Caption = string.Empty;
            i.SetNestedContent(() =>
            {
                Html.RenderPartial("TelefonosPartialView", Model.Telefonos);
            });
        });
    });
    s.Items.Add(i =>
    {
        i.ShowCaption = DefaultBoolean.False;
        i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        i.NestedExtension().Button(bt =>
        {
            bt.Name = "botSavePersona";
            bt.Text = Resources.BCMWebPublic.captionButtonSave;
            bt.UseSubmitBehavior = true;
        });
    });
}).GetHtml();
}

@Html.DevExpress().PopupControl(s =>
{
    s.Name = "modalUO";
    s.CallbackRouteValues = new { Controller = "Documentos", Action = "NuevaUnidadOrganizativaPartialView" };
    s.Width = 600;
    s.Height = 150;
    s.AllowDragging = true;
    s.CloseAction = CloseAction.CloseButton;
    s.CloseOnEscape = true;
    s.PopupAnimationType = AnimationType.Slide;
    s.HeaderText = Resources.FichaResource.headerPopupUnidadOrganizativa;
    s.Modal = true;
    s.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    s.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    s.ScrollBars = ScrollBars.None;
    s.SetContent(() =>
    {
        Html.RenderPartial("NuevaUnidadOrganizativaPartialView", new UnidadOrganizativaModel());
    });
}).GetHtml();
@Html.DevExpress().PopupControl(s =>
{
    s.Name = "modalCargo";
    s.CallbackRouteValues = new { Controller = "Documentos", Action = "NuevoCargoPartialView" };
    s.Width = 600;
    s.AllowDragging = true;
    s.CloseAction = CloseAction.CloseButton;
    s.CloseOnEscape = true;
    s.PopupAnimationType = AnimationType.Slide;
    s.HeaderText = Resources.FichaResource.headerPopupCargo;
    s.Modal = true;
    s.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    s.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    s.ScrollBars = ScrollBars.None;
    s.ClientSideEvents.CloseUp = "function(s, e){ NombreCargo.SetValue(''); }";
    s.SetContent(() =>
    {
        Html.RenderPartial("NuevoCargoPartialView", new CargoModel());
    });
}).GetHtml();