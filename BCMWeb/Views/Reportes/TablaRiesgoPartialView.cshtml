@using BCMWeb
@using BCMWeb.Models

@model List<DataRiesgoControl>

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "gvRiesgoControl";
    settings.CallbackRouteValues = new { Controller = "Reportes", Action = "TablaRiesgoPartialView", IdUnidadOrganizativa = ViewData["IdUnidadOrganizativa"] };

    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
    settings.ControlStyle.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(0);
    settings.ControlStyle.Border.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(0);
    settings.ControlStyle.BorderBottom.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(1);
    settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.Disabled;
    settings.ClientSideEvents.BeginCallback = "function (s,e) { lp.Show(); }";
    settings.ClientSideEvents.EndCallback = "function (s,e) { lp.Hide(); }";

    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
    settings.Settings.VerticalScrollableHeight = 400;
    settings.Width = Unit.Percentage(100);

    settings.SettingsPager.PageSize = 20;
    settings.SettingsPager.Position = PagerPosition.Bottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50", "100" };

    settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
    settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
    settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;

    settings.HtmlDataCellPrepared = (sender, e) =>
    {
        if (e.DataColumn.FieldName == "Estado")
        {
            if ((int)e.GetValue("Estado") == 3)
            {
                e.Cell.BackColor = System.Drawing.Color.Red;
            }
            else if ((int)e.GetValue("Estado") == 2)
            {
                e.Cell.BackColor = System.Drawing.Color.Yellow;
            }
            else
            {
                e.Cell.BackColor = System.Drawing.Color.Green;
            }
            e.Cell.Text = string.Empty;
        }
    };

    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "NroProceso";
        c.Width = Unit.Percentage(10);
        c.Caption = Resources.DocumentoResource.captionNroProceso;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.PropertiesEdit.DisplayFormatString = "{0}";
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "Amenaza";
        c.Width = Unit.Percentage(40);
        c.Caption = Resources.ReporteResource.captionAmenaza;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "Evento";
        c.Width = Unit.Percentage(40);
        c.Caption = Resources.ReporteResource.captionEvento;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
    //settings.Columns.Add(c =>
    //{
    //    c.Settings.AllowSort = DefaultBoolean.True;
    //    c.FieldName = "Probabilidad";
    //    c.Width = Unit.Percentage(5);
    //    c.Caption = "P";
    //    c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
    //    c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    //    c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
    //    c.HeaderStyle.Wrap = DefaultBoolean.True;
    //});
    //settings.Columns.Add(c =>
    //{
    //    c.Settings.AllowSort = DefaultBoolean.True;
    //    c.FieldName = "Impacto";
    //    c.Width = Unit.Percentage(5);
    //    c.Caption = "I";
    //    c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
    //    c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    //    c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
    //    c.HeaderStyle.Wrap = DefaultBoolean.True;
    //});
    //settings.Columns.Add(c =>
    //{
    //    c.Settings.AllowSort = DefaultBoolean.True;
    //    c.FieldName = "Control";
    //    c.Width = Unit.Percentage(5);
    //    c.Caption = "C";
    //    c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
    //    c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    //    c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
    //    c.HeaderStyle.Wrap = DefaultBoolean.True;
    //});
    settings.Columns.Add(c =>
    {
        c.Settings.AllowSort = DefaultBoolean.True;
        c.FieldName = "Estado";
        c.Width = Unit.Percentage(10);
        c.UnboundType = DevExpress.Data.UnboundColumnType.String;
        c.Caption = Resources.ReporteResource.captionEstado;
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.VerticalAlign = VerticalAlign.Middle;
        c.HeaderStyle.Wrap = DefaultBoolean.True;
    });
}).Bind(Model).GetHtml()

