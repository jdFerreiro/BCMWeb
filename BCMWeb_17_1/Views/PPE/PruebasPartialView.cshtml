@using BCMWeb;
@using BCMWeb.Models;
@using DevExpress.Data;

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var grid = Html.DevExpress().GridView<PruebaModel>(
        settings =>
        {
            settings.Name = "gvPruebas";
            settings.KeyFieldName = "IdPrueba";
            settings.CallbackRouteValues = new { Controller = "PPE", Action = "PruebasPartialView" };
            settings.Width = Unit.Percentage(100);
            settings.Settings.VerticalScrollableHeight = 325;
            settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
            settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
            settings.Styles.TitlePanel.Font.Bold = true;
            settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
            settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.Disabled;
            settings.ClientSideEvents.BeginCallback = "function (s,e) { lp.Show(); }";
            settings.ClientSideEvents.EndCallback = "function (s,e) { lp.Hide(); }";


            settings.Columns.Add(c =>
            {
                c.Caption = string.Empty;
                c.SetDataItemTemplateContent(tc =>
                {
                    if (short.Parse(DataBinder.Eval(tc.DataItem, "IdEstatus").ToString()) > 0)
                    {
                        ViewContext.Writer.Write(
                            Html.ActionLink(Resources.BCMWebPublic.captionButtonInforme, "GenerarInforme", new { IdPrueba = DataBinder.Eval(tc.DataItem, "IdPrueba") }, new { onclick = "lp.Show();" }) + "&nbsp;" +
                            Html.ActionLink(Resources.BCMWebPublic.captionButtonDelete, "EliminarPrueba", new { IdPrueba = DataBinder.Eval(tc.DataItem, "IdPrueba") },
                                new { onclick = "return confirm('" + string.Format(Resources.BCMWebPublic.ConfirmDeleteMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" })
                        );
                    }
                    else if (short.Parse(DataBinder.Eval(tc.DataItem, "IdEstatus").ToString()) == 0)
                    {
                        ViewContext.Writer.Write(
                            Html.ActionLink(Resources.PPEResource.captionButtonExec, "EditarEjecucion", new { IdPrueba = DataBinder.Eval(tc.DataItem, "IdPrueba") }, new { onclick = "lp.Show();" }) + "&nbsp;" +
                            Html.ActionLink(Resources.PPEResource.captionButtonSuspender, "SuspenderPrueba", new { IdPrueba = DataBinder.Eval(tc.DataItem, "IdPrueba") },
                                new { onclick = "return confirm('" + string.Format(Resources.PPEResource.confirmSuspenderMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" }) + "&nbsp;" +
                            Html.ActionLink(Resources.BCMWebPublic.captionButtonDelete, "EliminarPrueba", new { IdPrueba = DataBinder.Eval(tc.DataItem, "IdPrueba") },
                                new { onclick = "return confirm('" + string.Format(Resources.BCMWebPublic.ConfirmDeleteMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" })
                        );
                    }
                    else
                    {
                        ViewContext.Writer.Write(
                            Html.ActionLink(Resources.PPEResource.captionButtonPlan, "EditarPrueba", new { IdPrueba = DataBinder.Eval(tc.DataItem, "IdPrueba"), Ejecucion = false }, new { onclick = "lp.Show();" }) + "&nbsp;" +
                            Html.ActionLink(Resources.BCMWebPublic.captionButtonDelete, "EliminarPrueba", new { IdPrueba = DataBinder.Eval(tc.DataItem, "IdPrueba") },
                                new { onclick = "return confirm('" + string.Format(Resources.BCMWebPublic.ConfirmDeleteMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" })
                        );
                    }
                });
                c.SetHeaderTemplateContent(tc =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink(Resources.BCMWebPublic.captionButtonNew, "EditarPrueba", new { IdPrueba = -1, Ejecucion = false }, new { onclick = "lp.Show();" }).ToHtmlString()
                    );
                });
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Settings.AllowDragDrop = DefaultBoolean.False;
                c.Settings.AllowSort = DefaultBoolean.False;
                c.Width = Unit.Percentage(15);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "Nombre";
                c.Caption = Resources.PPEResource.captionNombre;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.Width = Unit.Percentage(25);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "Proposito";
                c.Caption = Resources.DocumentoResource.captionFrecuencia;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Width = Unit.Percentage(25);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "FechaInicio";
                c.Caption = Resources.PPEResource.captionFechaPlanificacion;
                c.ColumnType = MVCxGridViewColumnType.DateEdit;
                c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy hh:mm tt";
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Width = Unit.Percentage(10);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "Ubicacion";
                c.Caption = Resources.PPEResource.captionUbicacion;
                c.ColumnType = MVCxGridViewColumnType.DateEdit;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Width = Unit.Percentage(25);
            });
        });
}
@grid.Bind(Metodos.GetPruebas()).GetHtml()

